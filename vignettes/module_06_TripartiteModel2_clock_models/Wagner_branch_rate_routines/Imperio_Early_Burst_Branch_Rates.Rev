# n_taxa: number of taxa;
# max_age: oldest first appearance
# branch_lengths: duration of branches
# divergence_dates: upper bounds on unsampled lines leading to taxa or nodes
# origin_dates: divergence of lineages from the rest of the clade

#get number of branches
n_branches <- (2 * n_taxa) - 2;

# get magnitude of the bang
bang_mag ~ dnExponential(1.0);	# 2^bang_mag will be the initial rate
moves.append(mvScale(bang_mag, lambda=0.01, tune=true, weight=5.0));
moves.append(mvScale(bang_mag, lambda=0.10, tune=true, weight=3.0));
moves.append(mvScale(bang_mag, lambda=1.00, tune=true, weight=1.0));
rel_bang:=2^bang_mag;				# relative bang now a deterministic variable

init_branch_rate ~ dnExponential(1.0);
moves.append(mvScale(init_branch_rate, lambda=0.01, tune=true, weight=5));
moves.append(mvScale(init_branch_rate, lambda=0.10, tune=true, weight=3));
moves.append(mvScale(init_branch_rate, lambda=1.00, tune=true, weight=1));

# assign rates to branches as deterministic variables
for (bb in 1:n_branches)	{
	# this will change as rel_bang, divergence_dates[bb] & init_branch_rate[bb] change
	branch_rates[bb] := abs(init_branch_rate*(((rel_bang^(origin_dates[bb]/max_age)-rel_bang^(divergence_dates[bb]/max_age))/ln(rel_bang))/(branch_lengths[bb]/max_age)));
	}

# set deterministic node to monitor
mean_rt := mean(branch_rates);
