?OUwie
library(OUwie)
?OUwie
?bmplot
library(phytools)
?bmplot
?bmPlot
simtree <- rtree(15)
bmsim <- bmPlot(tree = simtree,
type="BM",
anc=0,
sig2=1/1000)
simtree <- rtree(200)
bmsim <- bmPlot(tree = simtree,
type="BM",
anc=0,
sig2=1/1000)
simtree <- rtree(50)
bmsim <- bmPlot(tree = simtree,
type="BM",
anc=0,
sig2=1/1000)
bmsim$x
simtree <- rtree(50)
bmsim <- bmPlot(tree = simtree,
type="BM",
anc=0,
sig2=1/1000)
hist(bmsim$x[1:50])#Look at the tip values
simtree <- rtree(50)
BM <- rTraitCont(phy = simtree,
model = "BM",
sigma = 0.01)
phenogram(tree = simtree,
x=BM)
simtree <- rtree(50)
BM <- rTraitCont(phy = simtree,
model = "BM",
sigma = 0.01)
phenogram(tree = simtree,
x=BM,
ftype = "off")
?rtree
OU <- rTraitCont(phy = simtree,
model = "OU",
sigma = 0.01,
alpha = 0.01,
theta = 0.07,
root.value = 0)
phenogram(tree = simtree,
x=OU,
ftype = "off")
simtree <- rtree(50)
BM <- rTraitCont(phy = simtree,
model = "BM",
sigma = 0.01)
phenogram(tree = simtree,
x=BM,
ftype = "off")
OU <- rTraitCont(phy = simtree,
model = "OU",
sigma = 0.01,
alpha = 0.01,
theta = 0.07,
root.value = 0)
phenogram(tree = simtree,
x=OU,
ftype = "off")
tree
tree <- read.tree("Eucladida_MAP.tre")
tree$root.time <- max(vcv(tree) + 268.8)
tree$edge.length[tree$edge.length == 0] <- 0.001
simtree <- tree
BM <- rTraitCont(phy = simtree,
model = "BM",
sigma = 0.01)
phenogram(tree = simtree,
x=BM,
ftype = "off")
OU <- rTraitCont(phy = simtree,
model = "OU",
sigma = 0.01,
alpha = 0.01,
theta = 0.07,
root.value = 0)
phenogram(tree = simtree,
x=OU,
ftype = "off")
OU <- rTraitCont(phy = simtree,
model = "OU",
sigma = 0.01,
alpha = 0.1,
theta = 0.2,
root.value = 0)
phenogram(tree = simtree,
x=OU,
ftype = "off")
simtree <- tree
BM <- rTraitCont(phy = simtree,
model = "BM",
sigma = 0.1)
phenogram(tree = simtree,
x=BM,
ftype = "off")
OU <- rTraitCont(phy = simtree,
model = "OU",
sigma = 0.1,
alpha = 0.1,
theta = 0,
root.value = 0)
phenogram(tree = simtree,
x=OU,
ftype = "off")
devtools::install_github("mwpennell/arbutus")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("mwpennell/arbutus")
devtools::install_github("mwpennell/arbutus")
devtools::install_github("mwpennell/arbutus")
devtools::install_github("mwpennell/arbutus")
tree <- read.tree("Eucladida_MAP.tre")
tree$root.time <- max(vcv(tree) + 268.8)
tree$edge.length[tree$edge.length == 0] <- 0.001
tree$node.label <- rep(1, Nnode(tree))
#read in data
data <- read.table("Shape_and_CalyxComplexity.txt",
header = TRUE)
Fan_data <- read.table("Fan_density.txt",
header = TRUE)
#log and assign to separate vectors
Shape <- log(data$Shape)
names(Shape) <- row.names(data)
Complexity <- data$Calyx_Complexity
Density <- Fan_data$Fan_density
names(Density) <- row.names(Fan_data) #this is already a logged value
#drop tips to make smaller tree that matches fan density data
prunedTree <- drop.tip(tree,
setdiff(tree$tip.label, names(Density))
)
#make table with no missing data
overlapTaxa <- intersect(row.names(data),
row.names(Fan_data))
allTraits <- data.frame(
Species = overlapTaxa,
Shape = Shape[overlapTaxa],
Complexity = Complexity[overlapTaxa],
Density = Density[overlapTaxa]
)
save(tree, prunedTree, allTraits, Shape, Complexity, Density, file = "Eucladida_inputs.RData")
getwd()
shapeOU
shapeOU <- fitContinuous(phy = tree, dat = Shape, model = "OU")
shapeOU$opt
